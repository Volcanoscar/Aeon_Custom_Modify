From 10c5b0be58d46f1eaedd60d81a61f63c6ed0bdae Mon Sep 17 00:00:00 2001
From: wanghuan <wang.huan@eastaeon.com>
Date: Tue, 28 Jun 2016 15:34:05 +0800
Subject: [PATCH] =?UTF-8?q?[=E9=9C=80=E6=B1=82]=E5=AE=A2=E6=88=B7=E8=A6=81=E6?=
 =?UTF-8?q?=B1=82=E8=83=BD=E5=A4=9F=E9=80=9A=E8=BF=87=E3=80=81data/media/0=E7?=
 =?UTF-8?q?=9A=84=E6=9D=83=E9=99=90=E6=9D=A5=E6=9C=AC=E5=9C=B0=E5=8D=87=E7=BA?=
 =?UTF-8?q?=A7?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 alps/bootable/recovery/recovery.cpp                |    2 +-
 alps/device/mediatek/common/sepolicy/uncrypt.te    |    8 +++++
 .../external/dm_agent_binder/dm_agent.cpp          |    4 +--
 .../proprietary/system/core/multi_init/init.cpp    |   33 ++++++++++++++++++--
 4 files changed, 42 insertions(+), 5 deletions(-)

diff --git a/alps/bootable/recovery/recovery.cpp b/alps/bootable/recovery/recovery.cpp
index ae8d5bc..7f65233 100755
--- a/alps/bootable/recovery/recovery.cpp
+++ b/alps/bootable/recovery/recovery.cpp
@@ -625,7 +625,7 @@ char* browse_directory(const char* path, Device* device) {
     ensure_path_mounted(path);
     int res = 0;
     int sharedSD_mount_data = 0;
-    const char* data_path ="/data";
+    const char* data_path ="/data/media/0";
     res = ensure_path_mounted(path);
 
 #if defined(MTK_SHARED_SDCARD)
diff --git a/alps/device/mediatek/common/sepolicy/uncrypt.te b/alps/device/mediatek/common/sepolicy/uncrypt.te
index 563dc25..d75d01c 100644
--- a/alps/device/mediatek/common/sepolicy/uncrypt.te
+++ b/alps/device/mediatek/common/sepolicy/uncrypt.te
@@ -8,3 +8,11 @@ allow uncrypt para_block_device:blk_file { write open };
 allow uncrypt system_app_data_file:dir { getattr search };
 allow uncrypt system_app_data_file:file { read getattr open };
 #allow uncrypt recovery_block_device:blk_file w_file_perms;
+
+allow uncrypt media_rw_data_file:dir { search getattr };
+allow uncrypt media_rw_data_file:file { open read getattr };
+allow uncrypt media_rw_data_file:dir getattr;
+
+
+
+
diff --git a/alps/vendor/mediatek/proprietary/external/dm_agent_binder/dm_agent.cpp b/alps/vendor/mediatek/proprietary/external/dm_agent_binder/dm_agent.cpp
index 668d096..2fd151b 100644
--- a/alps/vendor/mediatek/proprietary/external/dm_agent_binder/dm_agent.cpp
+++ b/alps/vendor/mediatek/proprietary/external/dm_agent_binder/dm_agent.cpp
@@ -1880,14 +1880,14 @@ int main(int argc, char *argv[]) {
 	//    daemon (0,0);
 	umask(000);
 	mkdir(DM_ROOT_PATH, 0775);
-
+	 #if defined(MTK_DM_APP)
     int ret = mkdir(RECOVERY_FOLDER, 0775);
     if (ret < 0) {
         ALOGE("Create RECOVERY_FOLDER error: [%d]\n", errno);
     } else {
         ALOGD("RECOVERY_FOLDER created end.");
     }
-
+	#endif
 	DmAgent::instantiate();
 	if (::file_exist(DM_LOCK_PATH)) {
 		property_set("persist.dm.lock", "true");
diff --git a/alps/vendor/mediatek/proprietary/system/core/multi_init/init.cpp b/alps/vendor/mediatek/proprietary/system/core/multi_init/init.cpp
index 9a4e3af..31448f9 100644
--- a/alps/vendor/mediatek/proprietary/system/core/multi_init/init.cpp
+++ b/alps/vendor/mediatek/proprietary/system/core/multi_init/init.cpp
@@ -843,6 +843,32 @@ static void export_kernel_boot_props() {
     }
 }
 
+
+static int get_boot_mode(void)
+{
+    int fd;
+    size_t s;
+    char boot_mode[4] = {'0'};
+
+    fd = open("/sys/class/BOOT/BOOT/boot/boot_mode", O_RDONLY);
+    if (fd < 0) {
+        ERROR("fail to open: %s\n", "/sys/class/BOOT/BOOT/boot/boot_mode");
+        return 0;
+    }
+
+    s = read(fd, (void *)&boot_mode, sizeof(boot_mode) - 1);
+    close(fd);
+
+    if (s <= 0) {
+        ERROR("could not read boot mode sys file\n");
+        return 0;
+    }
+
+    boot_mode[s] = '\0';
+    return atoi((const char*)boot_mode);
+}
+
+
 static void process_kernel_dt(void)
 {
     static const char android_dir[] = "/proc/device-tree/firmware/android";
@@ -943,6 +969,9 @@ static bool selinux_is_disabled(void)
 
 static bool selinux_is_enforcing(void)
 {
+    if (get_boot_mode() ==2/* MT_RECOVERY_BOOT*/){
+	return false;
+    }
     if (ALLOW_DISABLE_SELINUX) {
         return selinux_status_from_cmdline() == SELINUX_ENFORCING;
     }
@@ -1017,7 +1046,7 @@ static void selinux_initialize(bool in_kernel_domain) {
 }
 
 /* NEW FEATURE: multi-boot mode */
-static int get_boot_mode(void)
+/*static int get_boot_mode(void)
 {
     int fd;
     size_t s;
@@ -1039,7 +1068,7 @@ static int get_boot_mode(void)
 
     boot_mode[s] = '\0';
     return atoi((const char*)boot_mode);
-}
+}*/
 
 
 int main(int argc, char** argv) {
-- 
1.7.9.5

